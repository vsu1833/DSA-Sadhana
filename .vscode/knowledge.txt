  //todo  return sum == num ? true : false;
   

   //todo
     int rev = 0;
    while (n > 0)
    {
        int ld = n % 10;
        rev = rev * 10 + ld;
        n = n / 10;
    }

// Note:
// to_string(num) converts a number (e.g., int, long) to its string form.
// If num is negative, the '-' sign is included in the string, increasing the length by 1.
// To get the correct digit count, use abs(num) before converting to string.
// Example: int k = to_string(abs(num)).length();


/*
An Armstrong number (also known as a narcissistic number) for a given number of digits is an integer such that the sum of its own digits each raised to the power of the number of digits is equal to the number itself.
For example, 153 is an Armstrong number because:
1^3 + 5^3 + 3^3 = 1 + 125 + 27 = 153
*/


/*
 Both cin and getline are used to read input in C++, but they behave differently:

cin
Reads input up to the first whitespace (space, tab, or newline).
Example:
If you enter hello world, cin >> s; will only store hello in s.
getline
Reads an entire line of input, including spaces, until a newline character is found.
Example:
If you enter hello world, getline(cin, s); will store hello world in s

*/

/*
In C++ STL, the built-in sort() function (from the <algorithm> header) does not use a
 single classic algorithm like quicksort or mergesort. Instead, it uses a hybrid sorting algorithm called:


The `sort()` function in C++ STL typically uses a hybrid algorithm called IntroSort.
IntroSort starts with quicksort for fast average performance.
If recursion gets too deep, it switches to heapsort to avoid worst-case O(n^2).
For small partitions, it uses insertion sort for efficiency.
This combination ensures O(n log n) performance in both average and worst cases.
*/


2. View configured remotes:
```
git remote -v
```